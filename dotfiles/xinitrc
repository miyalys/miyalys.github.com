#!/bin/bash

# From the man page:
# Note, when using a .xserverrc script be sure to ``exec'' the real X server. Failing to do this can make the X server slow to start and exit.
# Programs which are run by .xinitrc should be run in the background if they do not exit right away, so that they don't prevent other programs from starting up. 
# However, the last long-lived program started (usually a window manager or terminal emulator) should be left in the foreground so that the script won't exit (which indicates that the user is done and that xinit should exit).

# {{{ DEFAULTS

userresources=$HOME/.Xresources
usermodmap=$HOME/.Xmodmap
sysresources=/etc/X11/xinit/.Xresources
sysmodmap=/etc/X11/xinit/.Xmodmap

# merge in defaults and keymaps

if [ -f $sysresources ]; then
    xrdb -merge $sysresources
fi

if [ -f $sysmodmap ]; then
    xmodmap $sysmodmap
fi

if [ -f "$userresources" ]; then
    xrdb -merge "$userresources"
fi

if [ -f "$usermodmap" ]; then
    xmodmap "$usermodmap"
fi

# start some nice programs

if [ -d /etc/X11/xinit/xinitrc.d ] ; then
  for f in /etc/X11/xinit/xinitrc.d/?*.sh ; do
    [ -x "$f" ] && . "$f"
  done
  unset f
fi

### }}}



### {{{ My config

# Running setxkbmap here as well even though the keymap is also set by /etc/X11/xorg.conf.d/00-keyboard.conf, because apparently xbindkeys depends on the set keymap. Without this fx. Mod4+Plus doesn't work before killing and restarting xbindkeys
#setxkbmap dk &

# Boot numlock on:
numlockx &

# It appears mod4+dead_acute works when I put it this far down xinitrc, but not when I put it just above or below setxkbmap, for some reason. Update: Just moved the shortcut away from dead_acute
sxhkd &

# Enable xbindkeys, which maps some keysyms to commands on my keyboard, so fx. the volume and audio controls work. See ~/.xbindkeysrc
#xbindkeys & # should run after setxkbmap from experience

# Autocutsel syncronisation between primary selection and the clipboard.
if [ -x /usr/bin/autocutsel ]; then
    #this will keep the clipboard in sync
    #   with the primary buffer
    autocutsel -selection CLIPBOARD -fork

    #this will keep the primary in sync
    #   with the clipboard buffer
    autocutsel -selection PRIMARY -fork
fi

# Enable Terminus & artwiz in X:
xset +fp /usr/share/fonts/local
xset +fp /usr/share/fonts/artwiz-fonts
xset fp rehash

# Disables screen blanking (0), suspends the screen after 6 minutes and then turns it off after 7.
# More info: http://www.shallowsky.com/linux/x-screen-blanking.html
xset dpms 0 360 420

# Set background image:
"$SH_DIR"/bg/set_bg.sh

# Enable fcitx (used for korean/japanese/chinese input)
#export GTK_IM_MODULE=fcitx
#export QT_IM_MODULE=fcitx
#export XMODIFIERS=@im=fcitx

# Ibus
#export GTK_IM_MODULE=ibus
#export QT4_IM_MODULE=xim
#export QT_IM_MODULE=xim
#export XMODIFIERS=@im=ibus


# Disables wake on lan:
# ethtool -s eth0 wol d

# Enable wifi automatically until I get LAN at home again
#sudo $SH_DIR/net.sh -q w h &
sudo "$SH_DIR"/wless_auto.sh &

# Disable eDP1 if HDMI1 is connected at X startup
"$SH_DIR"/xrandr_startup_check.sh & 

# Start the urxvt daemon:
#urxvtd --quiet --opendisplay --fork

# Unclutter - hide the cursor after some seconds of mouse inactivity.
unclutter -root &

# There's some weird thing where this reminder causes a notify-send message to just stays on screen permanently, not
# being clickable and thus removable even. Changing the background removes it though
# This pointed to a symlink (~/.reminders) earlier but regarding the ONCE keyword it seemingly checks and attempts to update the timestamp on the symlink and not the original file, and the symlink's timestamp is not updated with touch it seems, so I refer to the original file instead here
#remind -t6 $HOME/dotfiles/.reminders &
remind $HOME/dotfiles/.reminders

# dwm:
# Source the script that generates the info in the dwm menu bar, since it's basically its own module:
#source $SH_DIR/X_infobar.sh &
#exec $SH_DIR/startdwm.sh

# xmonad:
#xsetroot -cursor_name left_ptr
. "$SH_DIR"/battery_warning.sh &
#exec xmonad
exec i3
